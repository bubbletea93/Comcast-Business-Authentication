# .github/workflows/auth-header.yml

name: Comcast Business Authentication

on:
  workflow_dispatch:

jobs:
  headed-playwright:
    concurrency: comcast-auth
    runs-on: ubuntu-latest
    timeout-minutes: 15       # timeout if Comcast hangs

    env:
      BV_EMAIL: ${{ secrets.BV_EMAIL }}
      BV_PASS:  ${{ secrets.BV_PASS }}
      REDIS_ENDPOINT:   ${{ secrets.REDIS_ENDPOINT }}
      REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}

    steps:

      # 1. Check out your repo so the .csproj and source files are available
      - name: "⬇️ Checkout repository"
        uses: actions/checkout@v4

      # 2. Install .NET 8 SDK so we can build/run your console app
      - name: "🦊 Setup .NET 8"
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      # 3. Restore & build (Release) your Console app
      - name: "📦 Restore NuGet packages"
        run: dotnet restore "Comcast Business Authentication.csproj"

      - name: "🔨 Build Release"
        run: dotnet build --configuration Release --no-restore "Comcast Business Authentication.csproj"

      # 4. Cache Playwright’s browser binaries so we don’t reinstall each run
      - name: "📥 Cache Playwright"
        id: playwright-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('**/GlobalLockfile') }}

       # 5. Only if cache missed: run the *local* Playwright script produced by the build
      - name: "▶️ Install Playwright browsers (if needed)"
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          $projectPath = "Comcast Business Authentication.csproj"
          $projectDir  = (Resolve-Path $projectPath).ProviderPath | Split-Path -Parent
          $buildDir    = Join-Path $projectDir "bin/Release/net8.0"
          & "$buildDir/playwright.ps1" install --with-deps

      # 6. Run your console app under xvfb so Chromium is “headed” on Linux
      - name: "🏃 Run token fetcher (headed)"
        run: |
          xvfb-run --auto-servernum --server-args='-screen 0 1920x1080x24' \
            dotnet run --project "Comcast Business Authentication.csproj" --configuration Release
